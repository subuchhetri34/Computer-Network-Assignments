Question: What Happens When You Type "facebook.com" in Your Browser and Press Enter?
->

INTRODUCTION
In the digital age, accessing websites has become an everyday activity. However, the process behind this seemingly simple action involves a series of complex operations. This report aims to explain the steps that occur when a user types "facebook.com" into their web browser and presses Enter.


STEP-BY-STEP PROCESS 

1. Domain Name System (DNS) Resolution
   The first step is translating the human-readable domain name "facebook.com" into a machine-readable IP address.
   - User Input: The user enters "facebook.com" in the browser's address bar.
   - DNS Query: The browser checks its cache for the IP address of "facebook.com". If not found, it sends a DNS query to a DNS server.
   - DNS Response: The DNS server responds with the IP address of the Facebook server. If the DNS server doesn't know the IP, it queries other DNS servers until it finds the correct address.

2. Establishing a TCP Connection
   With the IP address in hand, the browser needs to establish a connection to the Facebook server using the Transmission Control Protocol (TCP).
   Three-Way Handshake:-
    - SYN: The browser sends a SYN (synchronize) packet to the Facebook server to initiate the connection.
    - SYN-ACK: The Facebook server responds with a SYN-ACK (synchronize-acknowledge) packet.
    - ACK: The browser sends an ACK (acknowledge) packet back to the server, establishing the connection.

3. Sending the HTTP Request
   Once the TCP connection is established, the browser sends an HTTP request to the Facebook server.
   - HTTP Request: Typically, a GET request is sent, asking for the homepage of Facebook (GET / HTTP/1.1).

4. Server Processing and Response
   The Facebook server processes the request and prepares a response.
   - Server Processing: The server locates the requested resources (HTML, CSS, JavaScript, images, etc.).
   - HTTP Response: The server sends an HTTP response back to the browser, which includes the requested HTML document and references to other resources.

5. Rendering the Webpage
   The browser receives the response and starts rendering the webpage.
   - HTML Parsing: The browser parses the HTML document to construct the Document Object Model (DOM).
   - Resource Requests: Additional HTTP requests are made for CSS files, JavaScript files, images, and other resources.
   - CSS Application: CSS rules are applied to the DOM to style the webpage.
   - JavaScript Execution: JavaScript code is executed to add interactivity and dynamic content.

6. Displaying the Webpage
   Once all resources are fetched and processed, the browser renders the final webpage for the user to see.
   - Final Render: The browser composites the DOM, CSS, and JavaScript outputs to display the fully rendered page.
   - User Interaction: The user can now interact with the webpage, such as scrolling, clicking links, and entering information.

7. Continuous Communication
   As the user interacts with the webpage, additional HTTP requests and responses may occur.
   - AJAX Requests: Asynchronous JavaScript and XML (AJAX) requests may be sent for dynamic content updates without refreshing the page.
   - WebSockets: Persistent connections for real-time data updates (e.g., notifications, messages).


CONCLUSION
The process of loading a webpage like "facebook.com" involves multiple steps that are executed in rapid succession, often within milliseconds. These steps include DNS resolution, establishing a TCP connection, sending HTTP requests, server processing, and rendering the webpage. Understanding this process highlights the complexity and efficiency of modern web technologies that provide a seamless user experience.